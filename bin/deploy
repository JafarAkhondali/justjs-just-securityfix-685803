#!/bin/bash
#
# This script clones the static website,
# updates credentials to github-actions if CI=true,
# copies the (already generated) documentation to the cloned repository,
# and pushes those changes to that repository.
#
ROOT=`readlink -f "${BASH_SOURCE%/*}/.."`; cd "$ROOT" || exit

GIT_REMOTE_URL=https://github.com/justjs/justjs.github.io
GIT_BRANCH=master
GIT_CLON_DESTINATION=docs/bot
GIT_REMOTE_NAME=origin
# This is an absolute path.
SOURCE=`readlink -f docs/public`
COMMIT_MSG="$VERSION_TAG"

echo "▸ Deleting $GIT_CLON_DESTINATION"
# Get the last pushed content and use git from the cloned directory.
rm -rf "$GIT_CLON_DESTINATION"

echo "▸ Cloning $GIT_REMOTE_URL#$GIT_BRANCH into $GIT_CLON_DESTINATION"
git clone "$GIT_REMOTE_URL" "$GIT_CLON_DESTINATION" --depth 1 --branch "$GIT_BRANCH" || exit 1

echo "▸ Changing directory to $GIT_CLON_DESTINATION"
cd "$GIT_CLON_DESTINATION"

# Setup github-actions credentials on github workflow.
if [ "$CI" = "true" ]; then

	echo "▸ Setting credentials"
	git config user.name "github-actions[bot]"
	git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

	echo "▸ Adding token to remote url for $GIT_REMOTE_NAME"
	# Add the GITHUB_TOKEN to the remote url and silent the output (just in case).
	# Based on: https://github.com/github/hub/issues/1644#issue-287574488
	git remote set-url "$GIT_REMOTE_NAME" "${GIT_REMOTE_URL/\/\//\/\/$GITHUB_TOKEN@}" > /dev/null 2>&1

fi

echo "▸ Overriding pulled content with $SOURCE contents"
cp --force --recursive "$SOURCE"/* ./
# @TODO Handle deletions.

echo "▸ Updating remote"
# Push changes.
git add .
git commit -m "$COMMIT_MSG"
git push "$GIT_REMOTE_NAME" "$GIT_BRANCH" -q || exit 1

echo "▸ Returning to the root path"
cd "$ROOT"
