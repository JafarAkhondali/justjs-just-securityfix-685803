#!/bin/bash

TAG="$1"
VERSION="${TAG/v/}"
ROOT="${BASH_SOURCE%/*}/.." # Source: https://stackoverflow.com/a/12694189
PUBLIC_DIR='docs/public'
DESTINATION_DIR="$PUBLIC_DIR/$TAG"
AVAILABLE_VERSIONS=(`./bin/get-available-versions`)

cd "$ROOT"

isValidTag () {
	[[ "$1" =~ ^v[0-9] ]]
}

copyContents () {

	local FROM=$1
	local TO=$2

	echo "[Docs] Copying the contents of $FROM to $TO"
	mkdir -p "$TO"
	cp "$FROM"/* "$TO" -R

}

copyStaticFiles () {

	copyContents docs/static/versioned "$DESTINATION_DIR"
	copyContents docs/static/non-versioned "$PUBLIC_DIR"

}

replaceStaticFileVars () {

	local FILENAME="$1"
	# Next line based on:
	# - Sort array: https://stackoverflow.com/a/11789688
	# - Sort by version: https://stackoverflow.com/a/4495368
	local availableVersionsDesc=(`IFS=$'\n' && sort -t. -k 1.2,1nr -k 2,2nr -k 3,3nr -k 4,4nr <<< "${AVAILABLE_VERSIONS[*]}" && unset IFS`)
	local availableVersionsTable=`./docs/tmpl/available-versions-table "${availableVersionsDesc[@]}"`
	local latestVersion="${availableVersionsDesc[0]}"
	local browserExampleFilename="dist/browser/core.min.js"
	local browserExampleUrl="https://cdn.jsdelivr.net/npm/@just-js/just@$latestVersion/$browserExampleFilename"
	local browserExampleSri=`./bin/generate-sri "$browserExampleFilename"`
	echo "[Docs] Replacing vars in $FILENAME"

	while read line; do

		# TODO: Replace all in once.
		replacedText=${line//\%\{version\}\%/$VERSION}
		replacedText=${replacedText//\%\{tag\}\%/$TAG}
		replacedText=${replacedText//\%\{available\-versions\}\%/$AVAILABLE_VERSIONS}
		replacedText=${replacedText//\%\{available\-versions-table\}\%/$availableVersionsTable}
		replacedText=${replacedText//\%\{sri\}\%/$sri}
		replacedText=${replacedText//\%\{latest\-version\}\%/$latestVersion}
		replacedText=${replacedText//\%\{browser-example-url\}\%/$browserExampleUrl}
		replacedText=${replacedText//\%\{browser-example-sri\}\%/$browserExampleSri}

		echo "$replacedText"

	done < "$FILENAME" > "$FILENAME.temp"

	mv "$FILENAME.temp" "$FILENAME"

}

document () {

	local BUILD_NAME=$1
	local DESTINATION="$DESTINATION_DIR/$BUILD_NAME"

	echo "[Docs] Generating docs at $DESTINATION"
	npm run doc:jsdoc -- "dist/$BUILD_NAME" -d "$DESTINATION"

}

if ! isValidTag "$TAG"; then

	echo "[Docs] You should provide a release tag."
	exit 1

fi

if [ ! -d "dist" ]; then
	npm run build
fi

copyStaticFiles
replaceStaticFileVars "$DESTINATION_DIR/index.html"
replaceStaticFileVars "$PUBLIC_DIR/index.html"
document browser
document server
