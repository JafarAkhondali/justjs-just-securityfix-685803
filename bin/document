#!/bin/bash

TAG="$1"
VERSION="${TAG/v/}"
ROOT="${BASH_SOURCE%/*}/.." # Source: https://stackoverflow.com/a/12694189
PUBLIC_DIR='docs/public'
TEMP_PUBLIC_DIR="$PUBLIC_DIR.temp"
DESTINATION_DIR="$PUBLIC_DIR/$TAG"
TEMP_DESTINATION_DIR="$TEMP_PUBLIC_DIR/$TAG"
runJsdoc=true

# Source: https://stackoverflow.com/a/13359121
for arg in "$@"; do

	case $arg in
		--run-jsdoc=* )

			runJsdoc="${arg#*=}"

			;;
	esac

done

cd "$ROOT"

isValidTag () {
	[[ "$1" =~ ^v[x0-9] ]]
}

copyContents () {

	local FROM=$1
	local TO=$2

	echo "[Docs] Copying the contents of $FROM to $TO"
	mkdir -p "$TO"
	cp "$FROM"/* "$TO" -R

}

copyStaticFiles () {

	copyContents docs/static/versioned "$TEMP_DESTINATION_DIR"
	copyContents docs/static/non-versioned "$TEMP_PUBLIC_DIR"
	# Exclude nunjucks files.
	rm "$TEMP_PUBLIC_DIR"/*.njk

}

document () {

	local BUILD_NAME=$1
	local DESTINATION="$TEMP_DESTINATION_DIR/$BUILD_NAME"

	if [ "$BUILD_NAME" = "server" ]; then

		echo "[Docs] Generating docs at $DESTINATION"
		npm run doc:jsdoc -- dist/"$BUILD_NAME" -d "$DESTINATION"

	else

		echo "[Docs] Generating docs at $DESTINATION/core/ and $DESTINATION/just/"
		npm run doc:jsdoc -- dist/"$BUILD_NAME"/core.* -d "$DESTINATION"/core
		npm run doc:jsdoc -- dist/"$BUILD_NAME"/just.* -d "$DESTINATION"/just

	fi

}

if ! isValidTag "$TAG"; then

	echo "[Docs] You should provide a release tag."
	exit 1

fi

if [ ! -d "dist" ]; then
	npm run build
fi

copyStaticFiles
nunjucks-to-html --baseDir docs/static/non-versioned --dest "$TEMP_PUBLIC_DIR"
nunjucks-to-html --baseDir docs/static/versioned --dest "$TEMP_PUBLIC_DIR/$TAG"

if [ "$runJsdoc" = true ]; then

	document browser
	document server

fi

# Minify only during production or by setting MINIFY=true.
if [ "$NODE_ENV" = "production" ] || [ "$MINIFY" = "true" ]; then

	npm run doc:minify -- --input-dir "$TEMP_PUBLIC_DIR" --output-dir "$TEMP_PUBLIC_DIR"

fi

# Replace only versions from the current version.
# Old versions will be replaced once, from outside.
# Also, use TEMP_PUBLIC_DIR to prevent multiple reloads during development.
node bin/replace-versions.js "$TEMP_PUBLIC_DIR/*/"

# Don't rename $PUBLIC_DIR during development. Doing so will make live-server's reloads stop working.
cp -R "$TEMP_PUBLIC_DIR"/* "$PUBLIC_DIR"
